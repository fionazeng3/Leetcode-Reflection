/*
LC 21. Merge Two Sorted Lists
两个linked list 如果不想出现一个走完了另一个
还没走完的情况下就用 input1 != null || input2 != null
while loop 里面肯定有东西没走完。 所以只写一个的情况
另一种情况用else 就好了
*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(-1);
        ListNode ans = dummy;
        ListNode current1 = l1;
        ListNode current2 = l2;
        while(current1 != null && current2 != null) {
            if(current1.val < current2.val) {
                ans.next = current1;
                current1 = current1.next;
            } else {
                ans.next = current2;
                current2 = current2.next;
            }
            ans = ans.next;   
        }
        ans.next = current1 == null ? current2 : current1;
        return dummy.next;
    }
}
