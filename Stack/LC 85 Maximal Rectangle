/*
LC 85 Maximal Rectangle
这道题跟LC 84 Largest Rectangle in Histogram
是一道题。 只不过这道题需要在每一行生成一个histogram，
再用monotonous stack 求每一行的最大rectangle
*/
class Solution {
        int x,y;
    public int maximalRectangle(char[][] matrix) {
         y = matrix.length;
         if(y == 0) return 0;
         x = matrix[0].length;
        int max = 0;
        for (int row = 0; row < y; row++) {
            int[] heights = createHistogram(row, matrix);
            System.out.println(Arrays.toString(heights));
            int localMax = calculateMaxRectangle(heights);
            max = Math.max(max, localMax);
        }
        return max;
    }

    private int[] createHistogram(int row, char[][] matrix) {
        int[] result = new int[x];
        for(int i = 0; i < x; i++) {
            int currentY = row;
            int count = 0;
            while(currentY >= 0 && matrix[currentY][i] == '1') {
                count++;
                currentY--;
            }
            result[i] = count;
        }
        return result;
    }

    private int calculateMaxRectangle(int[] heights) {
        int h = 0, w = 0, localMax = 0, current = 0;
        int len = heights.length;
        Stack<Integer> helper = new Stack<>();
        for (int i = 0; i <= len; i++) {
            if (i == len) {
                current = -1;
            } else {
                current = heights[i];
            }
            while(!helper.isEmpty() && current < heights[helper.peek()]) {
                h = heights[helper.pop()];
                w = helper.isEmpty() ? i : i - helper.peek() - 1;
                localMax = Math.max(localMax, w * h);
            }
            helper.push(i);
        }
        return localMax;
    }
}
