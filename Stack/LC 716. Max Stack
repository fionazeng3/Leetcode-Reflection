/*
LC 716. Max Stack
这道题建两个stack， 一个stack， 一个
regular stack。 regular stack就直接push
和pull。 maxStack 记录到现在为止看到的最大值
*/
class MaxStack {
    Stack<Integer> regularStack;
    Stack<Integer> maxStack;
    /** initialize your data structure here. */
    public MaxStack() {
        regularStack = new Stack<>();
        maxStack = new Stack<>();

    }

    public void push(int x) {
        regularStack.push(x);
        int max = x;
        if(!maxStack.isEmpty()) {
            max = Math.max(maxStack.peek(), x);
        }
        maxStack.push(max);
    }

    public int pop() {
        int result = regularStack.pop();
        maxStack.pop();
        return result;

    }

    public int top() {
        return regularStack.peek();
    }

    public int peekMax() {
        return maxStack.peek();
    }

    public int popMax() {
        int result = maxStack.peek();
        Stack<Integer> buffer = new Stack<>();
        while(!regularStack.isEmpty() && regularStack.peek() != result) {
            buffer.push(regularStack.pop());
            maxStack.pop();
        }
        regularStack.pop();
        maxStack.pop();
        while(!buffer.isEmpty()) {
            int current = buffer.pop();
            regularStack.push(current);
            if(!maxStack.isEmpty()) {
                maxStack.push(Math.max(maxStack.peek(), current));
            } else {
                maxStack.push(current);
            }
        }
        return result;

    }
}

/**
 * Your MaxStack object will be instantiated and called as such:
 * MaxStack obj = new MaxStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.peekMax();
 * int param_5 = obj.popMax();
 */
