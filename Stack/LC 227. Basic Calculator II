/*
LC 227. Basic Calculator II
这道题我一开始想的是用recursion 解， 但是其实不是很好写。
其实所有用recursion 的题都是可以用stack 解的。
建立一个stack。 如果符号是遇到+，将下一个数num入栈；
遇到-，则将-num入栈；遇到乘或除，先将上一个数出栈，
与当前数进行运算后，再将结果入栈。 这道题有一点很tricky。
当前数字怎么处理是取决于他前面的符号。 所以要在前面看好符号以后记下来
*/
class Solution {
    public int calculate(String s) {
        s += "q";
        char sign = '+';
        Stack<Integer> stack = new Stack<>();
        int currentNumber = 0;
        for(int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if(Character.isDigit(c)) {
                currentNumber = currentNumber * 10 + (c - '0');
            } else if (c != ' '){
                if(sign == '+') {
                    stack.push(currentNumber);
                } else if(sign == '-') {
                    stack.push(-currentNumber);
                } else if (sign == '*') {
                    int lastNum = stack.pop();
                    stack.push(currentNumber * lastNum);
                } else if(sign == '/') {
                    int lastNum = stack.pop();
                    stack.push(lastNum / currentNumber);
                }
                sign = c;
                currentNumber = 0;
            }
        }
        int sum = 0;
        while(!stack.isEmpty()) {
            sum += stack.pop();
        }
        return sum;

    }
}
