/*
LC 323 Number of Connected Components in an Undirected Graph
也是属于最简单的union find 了
天下一共有n 国， 每碰到一个edge， 就union 一次， 国家数- 1
union find 就是给这种集合问题设计的 */
class Solution {
    int[] father;
    public int countComponents(int n, int[][] edges) {
        // initialize
        father = new int[n];
        for (int i = 0; i < n; i++) {
            father[i] = i;
        }
        int num = n;
        // process
        for (int y = 0; y < edges.length; y++) {
            int[] eachEdge = edges[y];
            int n1 = eachEdge[0];
            int n2 = eachEdge[1];
            int r1 = find(n1);
            int r2 = find(n2);
            if(r1 != r2) {
                father[r1] = r2;
                num--;
            }
        }
        return num;
    }

    // find root
    public int find(int x) {
        int boss = x;
        while(father[boss]!= boss) {
            boss = father[boss];
        }
        while(x!= boss) {
            int temp = father[x];
            father[x] = boss;
            x = temp;
        }
        return boss;
    }
}
