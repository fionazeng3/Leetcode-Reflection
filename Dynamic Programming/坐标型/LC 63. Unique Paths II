/*
LC 63. Unique Paths II
这道题大体跟 Unique Paths 的思路一样。
唯一的区别就是有障碍物。 所以转移方程会有点不一样
f[i][j] =   0 如果当前有障碍
            1 如果 i = 0 j = 0 (初始条件)
            f[i - 1][j] 如果 j = 0
            f[i][j - 1] 如果 i= 0
            f[i - 1][j] + f[i][j - 1]
*/
class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int y = obstacleGrid.length;
        if(y == 0) return 0;
        int x = obstacleGrid[0].length;
        if(x == 0) return 0;
        int[][] f = new int[y][x];
        for(int i = 0; i < x; i++) {
            for(int j = 0; j < y; j++) {
                if(obstacleGrid[j][i] == 1) {
                    f[j][i] = 0;
                    continue;
                }
                if(i == 0 && j == 0) {
                    f[j][i] = 1;
                    continue;
                }
                f[j][i] = 0;
                if(i > 0) {
                    f[j][i] += f[j][i - 1];
                }
                if(j > 0) {
                    f[j][i] += f[j - 1][i];
                }
            }
        }
        return f[y - 1][x - 1];

    }
}
