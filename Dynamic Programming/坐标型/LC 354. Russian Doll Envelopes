/*
LC 354. Russian Doll Envelopes
1. 确定状态： 最优策略中， 最外层信封是Ei
f[i] 表示以Ei 为最外层时最多嵌套的层数
2. 转移方程
f[i] = max{1, f[j]+1| Ej 能放到􏲢􏲣􏲤Ei􏲥}
怎么确定Ej 能放到􏲢􏲣􏲤Ei􏲥呢？ 先把信封
按照长度排序， 然后f【j】从0 到i 枚举
3. 计算顺序
f[0] ... f[N-1]
时间复杂度O（N^2） 空间复杂度O（N）
*/
class Solution {
    public int maxEnvelopes(int[][] envelopes) {
        int len = envelopes.length;
        if(len == 0) return 0;
        Arrays.sort(envelopes, (a, b) -> {
            if(a[0] == b[0]) {
                return a[1] - b[1];
            } else {
                return a[0] - b[0];
            }
        });
        int[] f = new int[len];
        int res = 0;
        for(int i = 0; i < len; i++) {
            f[i] = 1;
            for(int j = 0; j < i; j++) {
                if(envelopes[j][0] < envelopes[i][0] && envelopes[j][1] < envelopes[i][1]) {
                    f[i] = Math.max(f[i], f[j] + 1);
                }
            }
            res = Math.max(res, f[i]);
        }
        return res;
    }
}
