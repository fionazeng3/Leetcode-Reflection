/*
LC 279. Perfect Squares
这是一道简单的划分行动态规划题目
1. 确定状态
最后一步： 假设在最右策略中， 最后一个完全平方数是j^2
那么最优策略中 n - j^2 也一定被划分成最少的完全平方数之和
f[i] 表示 数字i最少被划分成几个完全平方数之和
2. 转移方程
f[i] = min1<=j*j<=i{f[i-j2] + 1}
3. 初始条件
f[0] = 0;
时间复杂度 O（n* n^(1/2)）
*/
class Solution {
    public int numSquares(int n) {
        int[] f = new int[n+1];
        f[0] = 0;
        for(int i = 1; i<= n; i++) {
            f[i] = Integer.MAX_VALUE;
            for(int j = 1; j*j <= i; j++) {
                f[i] = Math.min(f[i], f[i - j*j] + 1);
            }
        }
        return f[n];
    }
}
