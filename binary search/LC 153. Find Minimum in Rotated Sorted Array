/*
LC 153. Find Minimum in Rotated Sorted Array
这道题跟 LC 33 的想法是一样的。首先visualize rotated
array 长什么样？ 一根比较高的增长线， 和一条比较低的增长线。
我们要找的是比较低的增长线的最左边。 所以， 先检查mid 是不是
在比较高的增长线上。 如果是， low = mid; 如果mid 在比较低的
增长线上， 那么high = mid

最后还要考虑array 根本没有rotate 的情况， 把答案和nums【0】
取最小就行了
*/
class Solution {
    public int findMin(int[] nums) {
        int l = 0;
        int len = nums.length;
        int r = len - 1;
        while(l + 1 < r) {
            int mid = l + (r - l) / 2;
            if(nums[mid] > nums[len - 1]) {
                l = mid;
            } else if(nums[mid] > nums[mid - 1]) {
                r = mid;
            } else {
                return nums[mid];
            }
        }
        return Math.min(nums[l], nums[r]);
    }
}
