/*
LC 22. Generate Parentheses
也是一道很经典的枚举型dfs。 注意： 剪枝
要在for loop 里面第一个做， 不然backtracking 就会乱了
*/
class Solution {
    List<String> ans = new ArrayList<>();
    int[] bank = new int[2];
    int size;
    public List<String> generateParenthesis(int n) {
        size = n * 2;
        bank[0] = n;
        bank[1] = n;
        String currentAns = "";
        dfs(currentAns, 0);
        return ans;
    }

    private void dfs(String currentAns, int index) {
        if(index == size) {
            ans.add(currentAns);
            return;
        }
        for(int i = 0; i < 2; i++) {
            String element = "";
            if(bank[i] > 0) {
                if(i == 0) {
                    element = "(";
                } else {
                    element = ")";
                }
                if(bank[0] > bank[1]) continue;
                currentAns += element;
                bank[i]--;
                dfs(currentAns, index + 1);
                currentAns = currentAns.substring(0, currentAns.length() - 1);
                bank[i] ++;
            }
        }
    }
}
