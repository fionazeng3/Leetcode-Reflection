/*
LC 380. Insert Delete GetRandom O(1)
这道题很简单， 用两个hashmap 就能解决。
一个hashmap val -》index
一个hashmap index-》 val
remove 的时候把target 删掉以后， 用最后一个数字
把那个index 的空缺填补上

注意讨论一下如果删的已经是最后一个数字了， 就不用替补了
*/
class RandomizedSet {
    Map<Integer, Integer> valToIndex;
    Map<Integer, Integer> indexToVal;
    int size;
    /** Initialize your data structure here. */
    public RandomizedSet() {
        valToIndex = new HashMap<>();
        indexToVal = new HashMap<>();
        size = 0;

    }

    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */
    public boolean insert(int val) {
        if(valToIndex.containsKey(val)) return false;
        valToIndex.put(val, size);
        indexToVal.put(size, val);
        size++;
        return true;

    }

    /** Removes a value from the set. Returns true if the set contained the specified element. */
    public boolean remove(int val) {
        if(!valToIndex.containsKey(val)) return false;
        int removeIndex = valToIndex.get(val);
        valToIndex.remove(val);
        indexToVal.remove(removeIndex);
        size--;
        if(size == 0 || !indexToVal.containsKey(size)) return true;
        int endVal = indexToVal.get(size);
        indexToVal.remove(size);
        valToIndex.put(endVal, removeIndex);
        indexToVal.put(removeIndex, endVal);
        return true;
    }

    /** Get a random element from the set. */
    public int getRandom() {
        Random rand = new Random();
        int randIndex = rand.nextInt(size);
        return indexToVal.get(randIndex);
    }
}

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet obj = new RandomizedSet();
 * boolean param_1 = obj.insert(val);
 * boolean param_2 = obj.remove(val);
 * int param_3 = obj.getRandom();
 */
