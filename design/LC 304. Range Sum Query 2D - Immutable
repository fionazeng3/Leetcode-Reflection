/*
LC 304. Range Sum Query 2D - Immutable
这道题很简单。 用一个sum 的二维数组来记录
sum[y][x] 是matrix 从0，0 到x，y 的
数字sum
然后每次call sum region 直接分类讨论就好了
*/
class NumMatrix {
    int[][] sum;
    public NumMatrix(int[][] matrix) {
        int y = matrix.length;
        if(y == 0) return;
        int x = matrix[0].length;
        sum = new int[y][x];
        for(int j = 0; j < y; j++) {
            for(int i = 0; i < x; i++) {
                sum[j][i] = matrix[j][i];
                if(i > 0) sum[j][i] += sum[j][i - 1];
                if(j > 0) sum[j][i] += sum[j - 1][i];
                if(i > 0 && j > 0) sum[j][i] -= sum[j - 1][i - 1];
            }
        }
    }

    public int sumRegion(int row1, int col1, int row2, int col2) {
        int ans = sum[row2][col2];
        if(col1 > 0) {
            ans -= sum[row2][col1 - 1];
        }
        if(row1 > 0) {
            ans -= sum[row1 - 1][col2];
        }
        if(col1 > 0 && row1 > 0) {
            ans += sum[row1 - 1][col1 - 1];
        }
        return ans;
    }
}

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix obj = new NumMatrix(matrix);
 * int param_1 = obj.sumRegion(row1,col1,row2,col2);
 */
