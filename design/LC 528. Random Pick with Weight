/*
LC 528. Random Pick with Weight
首先这道题说的有点不清楚。 比如过给一个数组
0  1  2  3
[1,3,2,4] 然后随便生成一个随机数
这个随机数有1/ 10 的几率是 0
有 3/10 的 的几率是1
有2/10 的几率是2
有4/10 的几率是3

这道题的思路是这样的求出数组的sum（10）
然后生成一个 1 - 10 的随机数
如果数是
1 -> 0
2,3,4 -> 1
5,6 -> 2
7,8,9,10 -> 3

那么这个东西要怎么实现呢？ 可以弄一个map， 这样memory 用的比较多
或者就是用前缀数组和。
*/
class Solution {
    int[] prefix;
    int sum = 0;
    Random rand;
    public Solution(int[] w) {
        rand = new Random();
        prefix = new int[w.length];
        for(int i = 0; i < w.length; i++) {
            sum += w[i];
            prefix[i] = sum;
        }
    }

    public int pickIndex() {
        int rNum = rand.nextInt(sum) + 1;
        int index = 0;
        for(int i = 0; i < prefix.length; i++) {
            if(rNum <= prefix[i]) {
                index = i;
                break;
            }
        }
        return index;
    }
}

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(w);
 * int param_1 = obj.pickIndex();
 */
