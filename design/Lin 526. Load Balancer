/*
Lin 526 Load Balancer
这道题很简单，就是增删 和getRandom
问题。 最好是能做到O(1)。 添加和删除
能做到O(1)就只能用hashmap。 可是hashmap
不能做到getRandom。 所以我们就想到了
用数组和hashmap 搭配。 hashmap 里面
记录server_id 的index。 删除的时候
删除项和数组最后一项对调就行了
*/

import java.util.Random;
public class LoadBalancer {
    List<Integer> lst;
    Map<Integer, Integer> bank;
    public LoadBalancer() {
        // do intialization if necessary
        lst = new ArrayList<>();
        bank = new HashMap<>();
    }

    /*
     * @param server_id: add a new server to the cluster
     * @return: nothing
     */
    public void add(int server_id) {
        // write your code here
        bank.put(server_id, lst.size());
        lst.add(server_id);
    }

    /*
     * @param server_id: server_id remove a bad server from the cluster
     * @return: nothing
     */
    public void remove(int server_id) {
        if(lst.isEmpty() || bank.isEmpty()) return;
        // write your code here
        int index = bank.get(server_id);
        // put the last element in the to-be-removed spot
        int lastNumber = lst.get(lst.size() - 1);
        lst.set(index, lastNumber);
        bank.put(lastNumber, index);
        // remove
        lst.remove(lst.size() - 1);
        bank.remove(server_id);
    }

    /*
     * @return: pick a server in the cluster randomly with equal probability
     */
    public int pick() {
        // write your code here
        Random rand = new Random();
        int randNum = rand.nextInt(lst.size());
        return lst.get(randNum);
    }
}
