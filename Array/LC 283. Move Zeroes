/*
LC 283. Move Zeroes
这道题要求移动完0以后non-zero element 顺序不能动
所以每一个0 只能跟他后面第一个不为0的数去换
具体实现方法是设置快慢指针。 快指针如果是0 就一直
往后走。 慢指针如果是0 就跟快指针换。 如果快指针<= 慢指针
了， 那么 high = low + 1
时间复杂度O(n)
*/
class Solution {
    public void moveZeroes(int[] nums) {
        int emptyPos = 0;
        int validNum = 0;
        int len = nums.length;
        while(emptyPos < len &&validNum < len) {
            while(emptyPos < len && nums[emptyPos] != 0) emptyPos++;
            while(validNum < len && (nums[validNum] == 0 || emptyPos > validNum)) validNum++;
            if(emptyPos < len &&validNum < len && emptyPos < validNum) {
                int temp = nums[emptyPos];
                nums[emptyPos] = nums[validNum];
                nums[validNum] = temp;
            }
            
        } 
    }
}
