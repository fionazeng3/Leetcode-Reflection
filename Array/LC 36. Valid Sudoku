/*
LC 36. Valid Sudoku
这道题column 建 9 个hashSet
row 建9 个hashSet
box 建9 个hashSet
整个sudoku iterate 一次。
每个位置计算出row， column， box 的index
这里的难点是计算 box index
公式是 (row / 3) * 3 + col / 3
这里的图看一下答案。

最后检查一下hashmap 中有没有已经出现过这个数字就好了
*/
class Solution {
    public boolean isValidSudoku(char[][] board) {
        HashSet<Integer>[] columns = new HashSet[9];
        HashSet<Integer>[] rows = new HashSet[9];
        HashSet<Integer>[] blocks = new HashSet[9];
        // column
        for(int i = 0; i < 9; i++) {
            for(int j = 0; j < 9; j++) {
                if(columns[i] == null) columns[i] = new HashSet<>();
                if(rows[j] == null) rows[j] = new HashSet<>();
                if(!Character.isDigit(board[j][i])) continue;
                int num = board[j][i] - '0';
                int boxIndex = (j / 3) * 3 + i / 3;
                if(blocks[boxIndex] == null) blocks[boxIndex] = new HashSet<>();
                if(columns[i].contains(num) || rows[j].contains(num) || blocks[boxIndex].contains(num)) return false;
                columns[i].add(num);
                rows[j].add(num);
                blocks[boxIndex].add(num);
            }
        }
        return true;
    }
}
