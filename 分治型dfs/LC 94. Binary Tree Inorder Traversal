/*
LC 94. Binary Tree Inorder Traversal
这道题不让用recursion 的方法做。 那就要想一想recursion的方法怎么转换成iterative
的方法。 recursion 的顺序是 left, root, right
我们来想象一下这个过程： 肯定是往左左左。。。print 右，左左左
所以用stack 也模拟这个过程
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        if(root == null) return ans;
        TreeNode current = root;
        Stack<TreeNode> s = new Stack<>();
        while(current != null || !s.isEmpty()) {
            while(current != null) {
                s.push(current);
                current = current.left;
            }
            current = s.pop();
            ans.add(current.val);
            current = current.right;
            
        }
        return ans;
    }
}
