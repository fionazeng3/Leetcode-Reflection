/*
LC 103. Binary Tree Zigzag Level Order Traversal
这道题很简单。 定义一个状态， 两个stack。一次stack 按左右
的顺序加。另一个stack 按右左的顺序加。
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root == null) return ans;
        Stack<TreeNode> st1 = new Stack<>();
        Stack<TreeNode> st2 = new Stack<>();
        st1.push(root);
        boolean status = true; // true st1 to st2 ||| false st2
        List<Integer> currentList = new ArrayList<>();
        while(!st1.isEmpty() || !st2.isEmpty()) {
            if(status) {
                TreeNode current = st1.pop();
                currentList.add(current.val);
                if(current.left != null) st2.push(current.left);
                if(current.right != null) st2.push(current.right);
                if(st1.isEmpty()) {
                    status = !status;
                    ans.add(currentList);
                    currentList = new ArrayList<>();
                }
            } else {
                TreeNode current = st2.pop();
                currentList.add(current.val);
                if(current.right != null) st1.push(current.right);
                if(current.left != null) st1.push(current.left);
                if(st2.isEmpty()) {
                    status = !status;
                    ans.add(currentList);
                    currentList = new ArrayList<>();
                }
            }
        }
        return ans;
    }
}
