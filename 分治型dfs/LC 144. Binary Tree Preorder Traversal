/*
LC 144. Binary Tree Preorder Traversal
这道题让用非recursive 方法做preorder 那就先想一想
recursive 的 preorder 是什么样的。 left print right
模拟的话很简单。 用一个stack， 处理一个node， 加入它的右， 左children
这样一直到结束
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        if(root == null) return ans;
        Stack<TreeNode> s = new Stack<>();
        s.push(root);
        while(!s.isEmpty()) {
            TreeNode current = s.pop();
            ans.add(current.val);
            if(current.right != null) s.push(current.right);
            if(current.left != null) s.push(current.left);
        }
        return ans;
    }
}
